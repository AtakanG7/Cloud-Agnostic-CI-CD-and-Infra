{
  "version": 4,
  "terraform_version": "1.9.5",
  "serial": 12,
  "lineage": "ed0b2008-09cf-5274-4314-3ba4519490c5",
  "outputs": {},
  "resources": [
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "azurerm_kubernetes_cluster",
      "name": "aks",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "aci_connector_linux": [],
            "api_server_access_profile": [],
            "auto_scaler_profile": [],
            "automatic_upgrade_channel": "",
            "azure_active_directory_role_based_access_control": [],
            "azure_policy_enabled": null,
            "confidential_computing": [],
            "cost_analysis_enabled": false,
            "current_kubernetes_version": "1.29.7",
            "default_node_pool": [
              {
                "auto_scaling_enabled": false,
                "capacity_reservation_group_id": "",
                "fips_enabled": false,
                "gpu_instance": "",
                "host_encryption_enabled": false,
                "host_group_id": "",
                "kubelet_config": [],
                "kubelet_disk_type": "OS",
                "linux_os_config": [],
                "max_count": 0,
                "max_pods": 110,
                "min_count": 0,
                "name": "default",
                "node_count": 1,
                "node_labels": {},
                "node_network_profile": [],
                "node_public_ip_enabled": false,
                "node_public_ip_prefix_id": "",
                "only_critical_addons_enabled": false,
                "orchestrator_version": "1.29",
                "os_disk_size_gb": 128,
                "os_disk_type": "Managed",
                "os_sku": "Ubuntu",
                "pod_subnet_id": "",
                "proximity_placement_group_id": "",
                "scale_down_mode": "Delete",
                "snapshot_id": "",
                "tags": null,
                "temporary_name_for_rotation": "",
                "type": "VirtualMachineScaleSets",
                "ultra_ssd_enabled": false,
                "upgrade_settings": [
                  {
                    "drain_timeout_in_minutes": 0,
                    "max_surge": "10%",
                    "node_soak_duration_in_minutes": 0
                  }
                ],
                "vm_size": "Standard_A2_v2",
                "vnet_subnet_id": "",
                "workload_runtime": "",
                "zones": null
              }
            ],
            "disk_encryption_set_id": "",
            "dns_prefix": "nevotek-aks-dns",
            "dns_prefix_private_cluster": "",
            "edge_zone": "",
            "fqdn": "nevotek-aks-dns-uyg4dnev.hcp.westeurope.azmk8s.io",
            "http_application_routing_enabled": null,
            "http_application_routing_zone_name": null,
            "http_proxy_config": [],
            "id": "/subscriptions/b228ca4c-b0fb-4ad5-a680-0faa5fe6a789/resourceGroups/infra002/providers/Microsoft.ContainerService/managedClusters/nevotek-aks",
            "identity": [
              {
                "identity_ids": null,
                "principal_id": "1916f8d6-ed53-4563-9a6a-89fc1ead2624",
                "tenant_id": "d6465c4a-df59-4582-911d-4ac55c1a1ba1",
                "type": "SystemAssigned"
              }
            ],
            "image_cleaner_enabled": null,
            "image_cleaner_interval_hours": null,
            "ingress_application_gateway": [],
            "key_management_service": [],
            "key_vault_secrets_provider": [],
            "kube_admin_config": [],
            "kube_admin_config_raw": "",
            "kube_config": [
              {
                "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRVnNPb1hwOHQra01ReVpxeGN5U1hkREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1USXlNREk1TlRoYUZ3MHlOakE1TVRJeU1ETTVOVGhhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURQSTA0SlBockJKUWdVaW1LYzZKNGcKMGoxeDhETFkrME5iRlByZHduQlprejlPNlJwQ2hkTTlERXZSb3J0ZUVUSmd2WjNCeHRONHVEOVFXZU1TQWpDVApYL0EvVVh5MFBnSnIyUGVxdFM2SnZiOEN2TGVyNjgra2lnUEpMZUZ1M3Q2NlNuOFBId2VGOW9BV3RqMmFGQ1hYCmhEYVlieDVLWE5xYXJIY0VDWDlCY0wrNHlOR3UvRldsVGdJUTRjTE1PekhoOG5OYkNoOHNHNHl5NURuWmlKZGEKNUo0UWxQVVQ4dEVvbkZUaFFiTGw5MTRkTmlCaHAwK0pieWVibEJGUGwyRER1R3FPZG9Ld2JJUkFCNVZ3WXlUUApaN2hFSlRTMkxkbEhEdVVmUSt6eGJiY3VyZm4ya1dpdXRtQVE0d1Zjb0s4Y2s4bFhSeDk3Y0MxdmQ3c3pvRmlaCjZpKzc4MWFQZG1SUHhVVEhrRkpCWExqL1ppQmJwR0VyUkZOUmpNdDMrZzhiZVhZb3dYYlVvRHFTQUhWNXd2c2oKSjJPOWhteTF2Ly94YWlBWEQyWDF2bnBXREk1WkduTFVzWXJpbThXbm5DajI2U256SEtRVi9rTHkrU3Rwa0dSMQowYzFNYVMzQnJ3UktGZnNJeTJlb2Iva1RzSjhyeXY0amdadXdjaWhOT1c0dzlwb3NGYWtjWjBOVERQYmFIdmRiCmFBZjBqdVpxcjR6L0Y5cjhPSDFYdW9xa20vNzYxSnEwVWxFQUd1aXVMV25zK09vWG9ndjVPOUVUOXVINzNCb3oKQUVaWDlPaC91OEJSYW43NGJqRk5NK2Y1RVhJR3paUzlzN2Z2NExGaGVSM0RUZW1WVFVORjAzSWZPY1FENjBQMwoxYlhFUU5jOThUelh3Wlg5WlNNQitRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNTWXowcHR5WncKZHFsQmdaakkwOS93REFnUXRUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUF4TnlQZlVDQUhMZFBUYkZadWErNwpQTmZQVTRZdnVJM1B4WG93VlRNMStkRHpJZkJnZVFMS0ExRlFRa3RWNlgxVkJIZHUwWnJpTzliMDVIYUNGOCtQCmFRNE5QOXpoL1cxVjZobkVlYUVqUU1xajBMckFxNEtOK3ZtNnBlck4xMzBrdnQ5Z25TbEM1bDg5b1h2Y1ROYTcKR0c5eWR3ZXg0WitUVHAvejdXdWxuNXBVYWYzb1pkUnVsTTc5R214eGVaV3VJTEFGRFUzUjE4SXlhbUFjNEF4YwpQelhzTTNQTVg5YWtvWHdUQTVVV0JGWEpzWTVOMXM0Z041bWF2bys1V29pZXVCTHVLaUpORWhNUHJNSnFNbzl0ClpZR1d2VTF1TmdyUklqVzdQMW9tUXk2TnRDVnJaK3FqVG4wSDN1WW9nREdBNU9aVmYvN2RtKzI1RGV5Y3BqNksKQ0FkcndEYi9CYm1KZVBWaWNGSThQM2ZKWnpHY0VKUnhXa2hqQVAzNW00TkJOUi9adHEySFgyRlNxTXBYaW14YQp0RWk3ZmsvZjlOMTQxVHpveGdRZkt5RE1PZThHd1hmOFNIZXgyZXgxWWFrbUhTelczQklzTGdDRzAvUnV0RVJZCnpWdG82b3VSbkFKZXJST0g3dGU2c3g2V2pTSzNqdU5id2lmS0IrM1pGMERqV2ZWNTVXUjhoUFc2ZG5EZ1lsWjUKRVNmVmNYaVRsNFBUY1dDUXRiQ2lvS3FZa2tyNHozbTdaa2xIVm1jbFhEMXJOS0g3Rms1V1EwdFpXdk1GOWVpTApFYUhSN09mUkpLSTV1MmF0MkhvRGltMnhwQTYwUGVUbzYwcnV2aTcxZUxDclJiKzduWFp2THA4aXI1ZGhCVVB0CnNjWUdTbWdnQkhYZjJ1b0YxVU1Ea1ZrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "client_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBenlOT0NUNGF3U1VJRklwaW5PaWVJTkk5Y2ZBeTJQdERXeFQ2M2NKd1daTS9UdWthClFvWFRQUXhMMGFLN1hoRXlZTDJkd2NiVGVMZy9VRm5qRWdJd2sxL3dQMUY4dEQ0Q2E5ajNxclV1aWIyL0FyeTMKcSt2UHBJb0R5UzNoYnQ3ZXVrcC9EeDhIaGZhQUZyWTltaFFsMTRRMm1HOGVTbHphbXF4M0JBbC9RWEMvdU1qUgpydnhWcFU0Q0VPSEN6RHN4NGZKeld3b2ZMQnVNc3VRNTJZaVhXdVNlRUpUMUUvTFJLSnhVNFVHeTVmZGVIVFlnCllhZFBpVzhubTVRUlQ1ZGd3N2hxam5hQ3NHeUVRQWVWY0dNa3oyZTRSQ1UwdGkzWlJ3N2xIMFBzOFcyM0xxMzUKOXBGb3JyWmdFT01GWEtDdkhKUEpWMGNmZTNBdGIzZTdNNkJZbWVvdnUvTldqM1prVDhWRXg1QlNRVnk0LzJZZwpXNlJoSzBSVFVZekxkL29QRzNsMktNRjIxS0E2a2dCMWVjTDdJeWRqdllac3RiLy84V29nRnc5bDliNTZWZ3lPCldScHkxTEdLNHB2RnA1d285dWtwOHh5a0ZmNUM4dmtyYVpCa2RkSE5UR2t0d2E4RVNoWDdDTXRucUcvNUU3Q2YKSzhyK0k0R2JzSElvVFRsdU1QYWFMQldwSEdkRFV3ejIyaDczVzJnSDlJN21hcStNL3hmYS9EaDlWN3FLcEp2KwordFNhdEZKUkFCcm9yaTFwN1BqcUY2SUwrVHZSRS9iaCs5d2FNd0JHVi9Ub2Y3dkFVV3ArK0c0eFRUUG4rUkZ5CkJzMlV2Yk8zNytDeFlYa2R3MDNwbFUxRFJkTnlIem5FQSt0RDk5VzF4RURYUGZFODE4R1YvV1VqQWZrQ0F3RUEKQVFLQ0FnQXo2MnFGQUk4ZU9KVUU2UWI4dzRYWFBqdHVrc0Y4QjhjRFRvZnZDK3l6VnlnNE5FK0R1eDJPb01WawpYNEROZkV2L1dhZndTVkQ2WWx4a1hKT0JFUkZ4NzBzOTQ4UDVQYzNIa0pQTHN5eGVGRFNMa0JnTnZNYklQRnZrCmtsNStOdGpuSXdNa0hDZjdtU1RVREl2MlVmU0dSN3FUak02djN3UmdYcmhhUjdNaENRelZXV2pOanF3OUNnZVUKaWJJVkZRVlUyRHUzNXhxWEtMU2twbllsbzRva20wZFBhcmJmY0M2akdrUmdUZUowcUFOc0dRUVcxaVFtazdqKwoweWRmcHRiM1dBTkZnRWtUeGErRWlTSVpFSkRLZC9vRkFycHFxNlZablU4cS9oQ25GMVFpSERPYWJTb3JHTVdOCmxnbmpCTmUvdHY5eG8vOHRKcG9NNVpzRHZyNVdLZ2M1NzF2Qk92dVlZb2c1NWFGM25XM1gwYi8xcHJ4OE1KNDQKK0l5N1VyN0hUYS84eStOSTd0L0I5a0tWSEdaN3RpLzZPQVJsbFh4czRSQXNGOWgvRjM5VXZBYlJnRXlreWl0ZAp6ajgzWndBYkpUa0JrTlRTNjR1K2RNYktXQ2FXVXBucjl5ZWF0OFNEeWE5clQxK3Yyc2ZxWlFBSGZDb3J3d2taCk10ak9XNTh4cmpqN3JCVEJIaFhrdStuYU1BLzBQdVU1QzVyRXR4bUJQSEpGNUd1dVh1L3h6b0Fhck9Xd1ZERDcKblJIaXRvOTFCVitpYXB6cnRaRTVvY01EVjZtV0xYbEhDQXRRbTYyMlRYUHh4TWpJNnljT3JBZTMrVlVjTHF5MQpCRzRxYnFnaG5pQ012enR1UkQ3K3pId3FEQmxKODFaVktUYitQQmcxVWpOSGc2QzVmUUtDQVFFQS90czlhaStuClEwL3VCTUk0UzFTS1ZQbXdIU3hQRE5vNGRnNUpuV1dmZGlPckgwQnBFMGMwN3NDai9HOFc0RjNiaG9zZ1hEVGQKOTFJSVI5UmRrTVRwZTE3RWhDcDE2ZzhFRUJLQmliZ2xTNWIvV3BPbmZDNHlqc3IwVXZLUEVac0JzSU1lUHdxUQpOdTR2R0RVRVFWanlQOUx2R2QxZVFic2cveUlmUnZyY1BXa2VJdEdoSC95R1hJd3RkODk5YklCUDRwMElnaHkvCmlCdks5Y1NSeU9ncDBiWEoyb2t1bzN4emtVOHA0Yk93eDVEd0lBVkZQVnNjYjdRQnV1UUVESmxRKzVpZ0xydnAKMFNYQTJ1dGNYek5mRWo4NmlUTnEzeklObU9HU1oyc0twTGdBSGFOeUdjNTV5NG1OTjBFUzB5NTY4QlJlVVdnVgpsd0tUbXdZR2lqSVNUd0tDQVFFQTBCRS8zT3ZkZzA4c3g1ZGJsRXI2SXhNZCs3VFZkY2tTckhJYlMwMUpoaFdUCjJIKzhDU0l4YnV2aUcvUWhxb0NhY29UN3VyUk53ZUp3WVhrU1p0S3ZLYTcxazc0TWdDbWpYS0lCTkFLYkN4YWQKMll0VDE1ZEovUll3V3I2VUtrYUNOeEtSUTBBS21MZEFmOFhZckZ1dGtCS2RBaS90bXZDQ085V1daK0NqeERCZwpoZW8wdzFTMFN3ZmtEZlBhNWdQWHNOZmZGakFaRGlGVWRKRDJ2b25XWFMxc1Jla3AraG5DM2hFUXhhaWdrbTVhCkt0OGZFREJKNU55MHJ1WXZYM2h3Vk5JTlYyV2creklpekttVWFUY1k2U3JMMnZGN3U5QlVZVk55cW55SzloVGcKYjVidGJIWEpYdjBFRi9DeE9mRms4emNqVmYyaTA1YjBOcUxEWGVmOU53S0NBUUErVnlTenQ4cGpaY2JrTlJvTwpHelRuU2xoeEdtaVB6VVZvWTJCUWR3NUZtTDRBSEFKWDYrQWYwdEdLS3laZVpiY1FOeklJUEFwYnVCNDhhODhqClhYZDdiUmdHK0ZmMWxBeTdYYnVBRTZKVDFqREtXRG5zMzJRUWw4YWlENkU5Zmp3d2tESXkyNE9oWEN2NjhPVUUKa3h4V3ptTWNZWkR2NVRWU0UyZXhOaVh2ZzZvU2ZGSzhmMG5pazR0L3RpcUpBdTRIa2NBR0M4QXlMQkkrZ2dIagpNaDhncENZbkpjMVp3bFNHbytXcnh3ZWtHV2tUZkJhT3hwMnpHVVlmRUMySlkydHl6OGZIQnNKUUhic0tFZTU3CmZ4WnZZVFlSWDVseDFVMk1Ld2xqOE1RZXZMK1NnR3Vsc21NS2piQVVaditTMXRqTnB6M1hEZTNTRFpoTG9IS3oKRlVKekFvSUJBUUNETTcxZm8rUUUzekpQa2FRUCtNK091b2xYcFlwTlFjUGl0Zmw4SEhwV2NOalAxb3hOL2gvSgo0RGl1ZzkyTzFKV1B6VWVuVGZjU1lhV1g4VzZuSkFlTWMyVXNDdFY3SThaOXJUS3hCMHVaVEdPeFFHaFlOSEJWCmhWNXNlbXlYMCtwY3EvcXB1NEp6Rm1zM3B4eWdZeGNwR0hPbFkyK2pHaklsWk9QNUVQQnowRVd0YkNobFc4NXMKMmNiMi9XUjFVc3I2R3NYMENkUmkwcVdjODZTRU5nclVxc1h4dDd2ZWw4d0htQjlKWkxJTVpFVzdid0w1aEZtMApWWEFpTWNpQm5VTElXY1JMN2l2NitueHpMaVFGek5hS2daQVd1ZHZhYk40b21TUmZXVFdQUTA3YlR3TGNOOUlKCmNlYlk2Yy8zeDc1dWw4QlNneVBmNVBxT1VVaDh1TU0xQW9JQkFRRE5xMHBZR3lwVkNXV0J6SDF1L2orSWN5K3YKZktNY2wvTmtlcXhubEx0WDhOb1lzUmtaRXIyUFNLUFBLZStyMzFSa0NOMnVMNHdBMDZoWUtFUERkbU92cWltRwpBYlcwZlVZT3VWVjBLSjc0eWN1NmZqSUtYdy8yT0tIamtKZnAzY0MzckFwTGRoOSt6ckdGczlwUEpNaDU3anpxCnZtd3ZEdHMzdVU3VEduWHI2dE91RnIxcks0dEdNd0ZxaExsZGd0SXErYVZCSmtoVU55OWxYWlo1YXZRd1kvQzUKV1hwQkRLeGdRUDRLT3h2RFhBMWVsVStDVGV0bHAxTlowcVlmd0dlaTZ1ODNhamVKa0VGMTQvUEN4M0pleW43QQpyckhsbDJZOHVQWHZSRGE2RUFGNXFSWVFXMktHNmtFaTNPbW51NTU1YXBtQzZ3czJ4a1IrdUdEeXJPa3oKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRDZ0F3SUJBZ0lRWlRXeWJLZWcyaGNJd1Ric2w5K1ZHekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWdGdzB5TkRBNU1USXlNREk1TlRoYUdBOHlNRFUwTURreE1qSXdNemsxT0ZvdwpEVEVMTUFrR0ExVUVBeE1DWTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURFCitVQ0FJYzJKNGJPNU1zZURiTFdoeEcwV1BneGNPOEQ3NzhDSlE5QjRvSm1OK2dWREpPYXpsVU83ZHBxcytadSsKc0ZNdEx2YlpleXpYVVdlK0h4Y2FvOUVxamNhMmQyUW94ZUJOTjhPZC9NS2VDSjF1dE9EVkcrb2RranVMRk5jQQpwdEFQMXpPcjErUW15bG56VDZzaTNsNUVMWHJDNU5iVWJrSVR1eG5Lc1dLQVJNYUYvYlZJNUVMUlZwbVYxSUV1ClpMUUlKc3I3OW5XaVo5MnlYdmY3R2toa2pPVnhLMDVOTitoN3IreFNMcCtiUStUZm1HS0FZTlNCMko4NnhlbzMKcmRTWWR4bTVBaFlTeWl0TEFseFdabHlnUlluVVFMRXI3VkdlTUUyMEJ2OG1QczJaVFMzbnMyWURDeUpvUTlrSApqLzVNWHdkdWZnS2k1c2oyUmRwbkVETzBwTHJpVUNvZFZwZEZ0NEJacXNBUVlvWSt0NTl4ZEZiTXd3V1dzWm52CjJhbEI0MnJIRW9Dbk5JOHo1UTJYdmE4UHQ2RVdiQ0tkckpDV2ZmdndtckhLVEJMN3R5WG9vV0huY2xlNEV1c1EKRUExWXRYU2pTS01XRG9xNWNqZlV3VXEwVVUvTmhoZ3ZrRGR0SGp5Vk9MQ3lSQVVUOGFxYTJDMDhDaDNKUDVIVwpTZ0I4cDFXM2liWStNT0ZiWFZtbWVUVUZHSGFkYlk1UWVBWHloaVU4cW01TjBadjN0MUZmY1FXS0N1UVAzUENMCi81cVFuNlhPNXY2S0lUZmIrSi91THVKQi9KOHhjT1NOYm01bEpFWU1BaFFxalNNNTZkdkpoaWNJM1U5VDVINHIKcFhmb3VFOGZjd3ZLRFlTcEhxZ0gzcjBrcW1EaEovTXhLNXhUaXZzTEdRSURBUUFCbzBJd1FEQU9CZ05WSFE4QgpBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVrbU05S2JjbWNIYXBRWUdZCnlOUGY4QXdJRUxVd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFLK2g3bCtPcWxXL0tnQUJ0SytBTXJHY2ZUMW0KQmthWk9OV1ZwL0RRbklmaEUwaFhScG9kbXpHanY1UXBtRzZJZGZmSzVsQ0VEMmxYTGZqd1ZySjhWWjRxTFpEWAppNVlrdnhObjluOFZGYThoMWRVdERGRDJkWUd5dDVJVE92cXU2QUVTVXRIVW8zZzhTM2c1MDFmcDByMzZjMXdjCklvUFdhSUc5Qm90NHU2N0d1RHd2dFN0UWxrLzBRMGxLVGRvOXpueHB0UHRzeVg5Y2Nxd2ptcm1vNTh1SlpXbE8KVkp5eFhJd2xxU3l1RlEvRjRwUkFUN0VEWHQ4aE1ENWRHR01FU01LNTIrczE1TU1PSy9MZHNmMDZYaXkxRU5YRApsMEJtU0l1ZUdDM1BlRVZtZ2ZWNzQ1aXpSZ0VRTUthRXFvblFWU2ZRM1lqcVdtWjlmVWo1d3ExalBRQWpNNXVpCmJVNnlnNW9oY2kvZEhMQ21TckYyWGJhdTE2c1hVT2VzSHljU1IybVAxK1BXdnkwOGMxMDdQUlEvb0l2N3k5UkkKMkdwcDN0aVRzdExPMjlHUGIybDJjVGtXcjN3aDI2czdqMHNraFExbkVYck9pS2tjUk9makNveW44MGJPcWxDVQphK2dKbGwwSkFXT2Q5SWoxb0JYZW5lN1gyN2l6U2NNU1NaUkJqc2QvRTcvQlo5VFBNTHh1TlJGYlF0OGxhVGx5CkJCTm1zVUtyaTNVUFh2OXhyZFhrUTlGUVpieVp5dXg0VndWSG5oNndvbkRJbDVlNzhyTjU1U0lEdnhudmJSaUgKZm84U1pRdDcvWXpQdjNJdVpEb012ckJVSWMrUDQ3SGZ1OVpGcU10SXJYU2xoLzdFMHE3NndLWWdhS0p6VjBMZQphaUJieDZUN0o5Mi9HMTdnCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "host": "https://nevotek-aks-dns-uyg4dnev.hcp.westeurope.azmk8s.io:443",
                "password": "qs8o1npcj9bztf57g4kwo1c1szuxb1i6svk245xf3dbhma1o4ecr6kvi6n8cg3vcvi43oxvmdwguihb2dhhvjv110vjsuriv8kq92t5okxybd1947q9urzxj3knf170u",
                "username": "clusterUser_infra002_nevotek-aks"
              }
            ],
            "kube_config_raw": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRDZ0F3SUJBZ0lRWlRXeWJLZWcyaGNJd1Ric2w5K1ZHekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWdGdzB5TkRBNU1USXlNREk1TlRoYUdBOHlNRFUwTURreE1qSXdNemsxT0ZvdwpEVEVMTUFrR0ExVUVBeE1DWTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURFCitVQ0FJYzJKNGJPNU1zZURiTFdoeEcwV1BneGNPOEQ3NzhDSlE5QjRvSm1OK2dWREpPYXpsVU83ZHBxcytadSsKc0ZNdEx2YlpleXpYVVdlK0h4Y2FvOUVxamNhMmQyUW94ZUJOTjhPZC9NS2VDSjF1dE9EVkcrb2RranVMRk5jQQpwdEFQMXpPcjErUW15bG56VDZzaTNsNUVMWHJDNU5iVWJrSVR1eG5Lc1dLQVJNYUYvYlZJNUVMUlZwbVYxSUV1ClpMUUlKc3I3OW5XaVo5MnlYdmY3R2toa2pPVnhLMDVOTitoN3IreFNMcCtiUStUZm1HS0FZTlNCMko4NnhlbzMKcmRTWWR4bTVBaFlTeWl0TEFseFdabHlnUlluVVFMRXI3VkdlTUUyMEJ2OG1QczJaVFMzbnMyWURDeUpvUTlrSApqLzVNWHdkdWZnS2k1c2oyUmRwbkVETzBwTHJpVUNvZFZwZEZ0NEJacXNBUVlvWSt0NTl4ZEZiTXd3V1dzWm52CjJhbEI0MnJIRW9Dbk5JOHo1UTJYdmE4UHQ2RVdiQ0tkckpDV2ZmdndtckhLVEJMN3R5WG9vV0huY2xlNEV1c1EKRUExWXRYU2pTS01XRG9xNWNqZlV3VXEwVVUvTmhoZ3ZrRGR0SGp5Vk9MQ3lSQVVUOGFxYTJDMDhDaDNKUDVIVwpTZ0I4cDFXM2liWStNT0ZiWFZtbWVUVUZHSGFkYlk1UWVBWHloaVU4cW01TjBadjN0MUZmY1FXS0N1UVAzUENMCi81cVFuNlhPNXY2S0lUZmIrSi91THVKQi9KOHhjT1NOYm01bEpFWU1BaFFxalNNNTZkdkpoaWNJM1U5VDVINHIKcFhmb3VFOGZjd3ZLRFlTcEhxZ0gzcjBrcW1EaEovTXhLNXhUaXZzTEdRSURBUUFCbzBJd1FEQU9CZ05WSFE4QgpBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVrbU05S2JjbWNIYXBRWUdZCnlOUGY4QXdJRUxVd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFLK2g3bCtPcWxXL0tnQUJ0SytBTXJHY2ZUMW0KQmthWk9OV1ZwL0RRbklmaEUwaFhScG9kbXpHanY1UXBtRzZJZGZmSzVsQ0VEMmxYTGZqd1ZySjhWWjRxTFpEWAppNVlrdnhObjluOFZGYThoMWRVdERGRDJkWUd5dDVJVE92cXU2QUVTVXRIVW8zZzhTM2c1MDFmcDByMzZjMXdjCklvUFdhSUc5Qm90NHU2N0d1RHd2dFN0UWxrLzBRMGxLVGRvOXpueHB0UHRzeVg5Y2Nxd2ptcm1vNTh1SlpXbE8KVkp5eFhJd2xxU3l1RlEvRjRwUkFUN0VEWHQ4aE1ENWRHR01FU01LNTIrczE1TU1PSy9MZHNmMDZYaXkxRU5YRApsMEJtU0l1ZUdDM1BlRVZtZ2ZWNzQ1aXpSZ0VRTUthRXFvblFWU2ZRM1lqcVdtWjlmVWo1d3ExalBRQWpNNXVpCmJVNnlnNW9oY2kvZEhMQ21TckYyWGJhdTE2c1hVT2VzSHljU1IybVAxK1BXdnkwOGMxMDdQUlEvb0l2N3k5UkkKMkdwcDN0aVRzdExPMjlHUGIybDJjVGtXcjN3aDI2czdqMHNraFExbkVYck9pS2tjUk9makNveW44MGJPcWxDVQphK2dKbGwwSkFXT2Q5SWoxb0JYZW5lN1gyN2l6U2NNU1NaUkJqc2QvRTcvQlo5VFBNTHh1TlJGYlF0OGxhVGx5CkJCTm1zVUtyaTNVUFh2OXhyZFhrUTlGUVpieVp5dXg0VndWSG5oNndvbkRJbDVlNzhyTjU1U0lEdnhudmJSaUgKZm84U1pRdDcvWXpQdjNJdVpEb012ckJVSWMrUDQ3SGZ1OVpGcU10SXJYU2xoLzdFMHE3NndLWWdhS0p6VjBMZQphaUJieDZUN0o5Mi9HMTdnCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://nevotek-aks-dns-uyg4dnev.hcp.westeurope.azmk8s.io:443\n  name: nevotek-aks\ncontexts:\n- context:\n    cluster: nevotek-aks\n    user: clusterUser_infra002_nevotek-aks\n  name: nevotek-aks\ncurrent-context: nevotek-aks\nkind: Config\npreferences: {}\nusers:\n- name: clusterUser_infra002_nevotek-aks\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRVnNPb1hwOHQra01ReVpxeGN5U1hkREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1USXlNREk1TlRoYUZ3MHlOakE1TVRJeU1ETTVOVGhhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURQSTA0SlBockJKUWdVaW1LYzZKNGcKMGoxeDhETFkrME5iRlByZHduQlprejlPNlJwQ2hkTTlERXZSb3J0ZUVUSmd2WjNCeHRONHVEOVFXZU1TQWpDVApYL0EvVVh5MFBnSnIyUGVxdFM2SnZiOEN2TGVyNjgra2lnUEpMZUZ1M3Q2NlNuOFBId2VGOW9BV3RqMmFGQ1hYCmhEYVlieDVLWE5xYXJIY0VDWDlCY0wrNHlOR3UvRldsVGdJUTRjTE1PekhoOG5OYkNoOHNHNHl5NURuWmlKZGEKNUo0UWxQVVQ4dEVvbkZUaFFiTGw5MTRkTmlCaHAwK0pieWVibEJGUGwyRER1R3FPZG9Ld2JJUkFCNVZ3WXlUUApaN2hFSlRTMkxkbEhEdVVmUSt6eGJiY3VyZm4ya1dpdXRtQVE0d1Zjb0s4Y2s4bFhSeDk3Y0MxdmQ3c3pvRmlaCjZpKzc4MWFQZG1SUHhVVEhrRkpCWExqL1ppQmJwR0VyUkZOUmpNdDMrZzhiZVhZb3dYYlVvRHFTQUhWNXd2c2oKSjJPOWhteTF2Ly94YWlBWEQyWDF2bnBXREk1WkduTFVzWXJpbThXbm5DajI2U256SEtRVi9rTHkrU3Rwa0dSMQowYzFNYVMzQnJ3UktGZnNJeTJlb2Iva1RzSjhyeXY0amdadXdjaWhOT1c0dzlwb3NGYWtjWjBOVERQYmFIdmRiCmFBZjBqdVpxcjR6L0Y5cjhPSDFYdW9xa20vNzYxSnEwVWxFQUd1aXVMV25zK09vWG9ndjVPOUVUOXVINzNCb3oKQUVaWDlPaC91OEJSYW43NGJqRk5NK2Y1RVhJR3paUzlzN2Z2NExGaGVSM0RUZW1WVFVORjAzSWZPY1FENjBQMwoxYlhFUU5jOThUelh3Wlg5WlNNQitRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNTWXowcHR5WncKZHFsQmdaakkwOS93REFnUXRUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUF4TnlQZlVDQUhMZFBUYkZadWErNwpQTmZQVTRZdnVJM1B4WG93VlRNMStkRHpJZkJnZVFMS0ExRlFRa3RWNlgxVkJIZHUwWnJpTzliMDVIYUNGOCtQCmFRNE5QOXpoL1cxVjZobkVlYUVqUU1xajBMckFxNEtOK3ZtNnBlck4xMzBrdnQ5Z25TbEM1bDg5b1h2Y1ROYTcKR0c5eWR3ZXg0WitUVHAvejdXdWxuNXBVYWYzb1pkUnVsTTc5R214eGVaV3VJTEFGRFUzUjE4SXlhbUFjNEF4YwpQelhzTTNQTVg5YWtvWHdUQTVVV0JGWEpzWTVOMXM0Z041bWF2bys1V29pZXVCTHVLaUpORWhNUHJNSnFNbzl0ClpZR1d2VTF1TmdyUklqVzdQMW9tUXk2TnRDVnJaK3FqVG4wSDN1WW9nREdBNU9aVmYvN2RtKzI1RGV5Y3BqNksKQ0FkcndEYi9CYm1KZVBWaWNGSThQM2ZKWnpHY0VKUnhXa2hqQVAzNW00TkJOUi9adHEySFgyRlNxTXBYaW14YQp0RWk3ZmsvZjlOMTQxVHpveGdRZkt5RE1PZThHd1hmOFNIZXgyZXgxWWFrbUhTelczQklzTGdDRzAvUnV0RVJZCnpWdG82b3VSbkFKZXJST0g3dGU2c3g2V2pTSzNqdU5id2lmS0IrM1pGMERqV2ZWNTVXUjhoUFc2ZG5EZ1lsWjUKRVNmVmNYaVRsNFBUY1dDUXRiQ2lvS3FZa2tyNHozbTdaa2xIVm1jbFhEMXJOS0g3Rms1V1EwdFpXdk1GOWVpTApFYUhSN09mUkpLSTV1MmF0MkhvRGltMnhwQTYwUGVUbzYwcnV2aTcxZUxDclJiKzduWFp2THA4aXI1ZGhCVVB0CnNjWUdTbWdnQkhYZjJ1b0YxVU1Ea1ZrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBenlOT0NUNGF3U1VJRklwaW5PaWVJTkk5Y2ZBeTJQdERXeFQ2M2NKd1daTS9UdWthClFvWFRQUXhMMGFLN1hoRXlZTDJkd2NiVGVMZy9VRm5qRWdJd2sxL3dQMUY4dEQ0Q2E5ajNxclV1aWIyL0FyeTMKcSt2UHBJb0R5UzNoYnQ3ZXVrcC9EeDhIaGZhQUZyWTltaFFsMTRRMm1HOGVTbHphbXF4M0JBbC9RWEMvdU1qUgpydnhWcFU0Q0VPSEN6RHN4NGZKeld3b2ZMQnVNc3VRNTJZaVhXdVNlRUpUMUUvTFJLSnhVNFVHeTVmZGVIVFlnCllhZFBpVzhubTVRUlQ1ZGd3N2hxam5hQ3NHeUVRQWVWY0dNa3oyZTRSQ1UwdGkzWlJ3N2xIMFBzOFcyM0xxMzUKOXBGb3JyWmdFT01GWEtDdkhKUEpWMGNmZTNBdGIzZTdNNkJZbWVvdnUvTldqM1prVDhWRXg1QlNRVnk0LzJZZwpXNlJoSzBSVFVZekxkL29QRzNsMktNRjIxS0E2a2dCMWVjTDdJeWRqdllac3RiLy84V29nRnc5bDliNTZWZ3lPCldScHkxTEdLNHB2RnA1d285dWtwOHh5a0ZmNUM4dmtyYVpCa2RkSE5UR2t0d2E4RVNoWDdDTXRucUcvNUU3Q2YKSzhyK0k0R2JzSElvVFRsdU1QYWFMQldwSEdkRFV3ejIyaDczVzJnSDlJN21hcStNL3hmYS9EaDlWN3FLcEp2KwordFNhdEZKUkFCcm9yaTFwN1BqcUY2SUwrVHZSRS9iaCs5d2FNd0JHVi9Ub2Y3dkFVV3ArK0c0eFRUUG4rUkZ5CkJzMlV2Yk8zNytDeFlYa2R3MDNwbFUxRFJkTnlIem5FQSt0RDk5VzF4RURYUGZFODE4R1YvV1VqQWZrQ0F3RUEKQVFLQ0FnQXo2MnFGQUk4ZU9KVUU2UWI4dzRYWFBqdHVrc0Y4QjhjRFRvZnZDK3l6VnlnNE5FK0R1eDJPb01WawpYNEROZkV2L1dhZndTVkQ2WWx4a1hKT0JFUkZ4NzBzOTQ4UDVQYzNIa0pQTHN5eGVGRFNMa0JnTnZNYklQRnZrCmtsNStOdGpuSXdNa0hDZjdtU1RVREl2MlVmU0dSN3FUak02djN3UmdYcmhhUjdNaENRelZXV2pOanF3OUNnZVUKaWJJVkZRVlUyRHUzNXhxWEtMU2twbllsbzRva20wZFBhcmJmY0M2akdrUmdUZUowcUFOc0dRUVcxaVFtazdqKwoweWRmcHRiM1dBTkZnRWtUeGErRWlTSVpFSkRLZC9vRkFycHFxNlZablU4cS9oQ25GMVFpSERPYWJTb3JHTVdOCmxnbmpCTmUvdHY5eG8vOHRKcG9NNVpzRHZyNVdLZ2M1NzF2Qk92dVlZb2c1NWFGM25XM1gwYi8xcHJ4OE1KNDQKK0l5N1VyN0hUYS84eStOSTd0L0I5a0tWSEdaN3RpLzZPQVJsbFh4czRSQXNGOWgvRjM5VXZBYlJnRXlreWl0ZAp6ajgzWndBYkpUa0JrTlRTNjR1K2RNYktXQ2FXVXBucjl5ZWF0OFNEeWE5clQxK3Yyc2ZxWlFBSGZDb3J3d2taCk10ak9XNTh4cmpqN3JCVEJIaFhrdStuYU1BLzBQdVU1QzVyRXR4bUJQSEpGNUd1dVh1L3h6b0Fhck9Xd1ZERDcKblJIaXRvOTFCVitpYXB6cnRaRTVvY01EVjZtV0xYbEhDQXRRbTYyMlRYUHh4TWpJNnljT3JBZTMrVlVjTHF5MQpCRzRxYnFnaG5pQ012enR1UkQ3K3pId3FEQmxKODFaVktUYitQQmcxVWpOSGc2QzVmUUtDQVFFQS90czlhaStuClEwL3VCTUk0UzFTS1ZQbXdIU3hQRE5vNGRnNUpuV1dmZGlPckgwQnBFMGMwN3NDai9HOFc0RjNiaG9zZ1hEVGQKOTFJSVI5UmRrTVRwZTE3RWhDcDE2ZzhFRUJLQmliZ2xTNWIvV3BPbmZDNHlqc3IwVXZLUEVac0JzSU1lUHdxUQpOdTR2R0RVRVFWanlQOUx2R2QxZVFic2cveUlmUnZyY1BXa2VJdEdoSC95R1hJd3RkODk5YklCUDRwMElnaHkvCmlCdks5Y1NSeU9ncDBiWEoyb2t1bzN4emtVOHA0Yk93eDVEd0lBVkZQVnNjYjdRQnV1UUVESmxRKzVpZ0xydnAKMFNYQTJ1dGNYek5mRWo4NmlUTnEzeklObU9HU1oyc0twTGdBSGFOeUdjNTV5NG1OTjBFUzB5NTY4QlJlVVdnVgpsd0tUbXdZR2lqSVNUd0tDQVFFQTBCRS8zT3ZkZzA4c3g1ZGJsRXI2SXhNZCs3VFZkY2tTckhJYlMwMUpoaFdUCjJIKzhDU0l4YnV2aUcvUWhxb0NhY29UN3VyUk53ZUp3WVhrU1p0S3ZLYTcxazc0TWdDbWpYS0lCTkFLYkN4YWQKMll0VDE1ZEovUll3V3I2VUtrYUNOeEtSUTBBS21MZEFmOFhZckZ1dGtCS2RBaS90bXZDQ085V1daK0NqeERCZwpoZW8wdzFTMFN3ZmtEZlBhNWdQWHNOZmZGakFaRGlGVWRKRDJ2b25XWFMxc1Jla3AraG5DM2hFUXhhaWdrbTVhCkt0OGZFREJKNU55MHJ1WXZYM2h3Vk5JTlYyV2creklpekttVWFUY1k2U3JMMnZGN3U5QlVZVk55cW55SzloVGcKYjVidGJIWEpYdjBFRi9DeE9mRms4emNqVmYyaTA1YjBOcUxEWGVmOU53S0NBUUErVnlTenQ4cGpaY2JrTlJvTwpHelRuU2xoeEdtaVB6VVZvWTJCUWR3NUZtTDRBSEFKWDYrQWYwdEdLS3laZVpiY1FOeklJUEFwYnVCNDhhODhqClhYZDdiUmdHK0ZmMWxBeTdYYnVBRTZKVDFqREtXRG5zMzJRUWw4YWlENkU5Zmp3d2tESXkyNE9oWEN2NjhPVUUKa3h4V3ptTWNZWkR2NVRWU0UyZXhOaVh2ZzZvU2ZGSzhmMG5pazR0L3RpcUpBdTRIa2NBR0M4QXlMQkkrZ2dIagpNaDhncENZbkpjMVp3bFNHbytXcnh3ZWtHV2tUZkJhT3hwMnpHVVlmRUMySlkydHl6OGZIQnNKUUhic0tFZTU3CmZ4WnZZVFlSWDVseDFVMk1Ld2xqOE1RZXZMK1NnR3Vsc21NS2piQVVaditTMXRqTnB6M1hEZTNTRFpoTG9IS3oKRlVKekFvSUJBUUNETTcxZm8rUUUzekpQa2FRUCtNK091b2xYcFlwTlFjUGl0Zmw4SEhwV2NOalAxb3hOL2gvSgo0RGl1ZzkyTzFKV1B6VWVuVGZjU1lhV1g4VzZuSkFlTWMyVXNDdFY3SThaOXJUS3hCMHVaVEdPeFFHaFlOSEJWCmhWNXNlbXlYMCtwY3EvcXB1NEp6Rm1zM3B4eWdZeGNwR0hPbFkyK2pHaklsWk9QNUVQQnowRVd0YkNobFc4NXMKMmNiMi9XUjFVc3I2R3NYMENkUmkwcVdjODZTRU5nclVxc1h4dDd2ZWw4d0htQjlKWkxJTVpFVzdid0w1aEZtMApWWEFpTWNpQm5VTElXY1JMN2l2NitueHpMaVFGek5hS2daQVd1ZHZhYk40b21TUmZXVFdQUTA3YlR3TGNOOUlKCmNlYlk2Yy8zeDc1dWw4QlNneVBmNVBxT1VVaDh1TU0xQW9JQkFRRE5xMHBZR3lwVkNXV0J6SDF1L2orSWN5K3YKZktNY2wvTmtlcXhubEx0WDhOb1lzUmtaRXIyUFNLUFBLZStyMzFSa0NOMnVMNHdBMDZoWUtFUERkbU92cWltRwpBYlcwZlVZT3VWVjBLSjc0eWN1NmZqSUtYdy8yT0tIamtKZnAzY0MzckFwTGRoOSt6ckdGczlwUEpNaDU3anpxCnZtd3ZEdHMzdVU3VEduWHI2dE91RnIxcks0dEdNd0ZxaExsZGd0SXErYVZCSmtoVU55OWxYWlo1YXZRd1kvQzUKV1hwQkRLeGdRUDRLT3h2RFhBMWVsVStDVGV0bHAxTlowcVlmd0dlaTZ1ODNhamVKa0VGMTQvUEN4M0pleW43QQpyckhsbDJZOHVQWHZSRGE2RUFGNXFSWVFXMktHNmtFaTNPbW51NTU1YXBtQzZ3czJ4a1IrdUdEeXJPa3oKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    token: qs8o1npcj9bztf57g4kwo1c1szuxb1i6svk245xf3dbhma1o4ecr6kvi6n8cg3vcvi43oxvmdwguihb2dhhvjv110vjsuriv8kq92t5okxybd1947q9urzxj3knf170u\n",
            "kubelet_identity": [
              {
                "client_id": "89f66a6f-dff0-49e6-8a55-ab4dad12be60",
                "object_id": "667ebd9b-4829-45b4-a5e8-66ffee72283b",
                "user_assigned_identity_id": "/subscriptions/b228ca4c-b0fb-4ad5-a680-0faa5fe6a789/resourceGroups/MC_infra002_nevotek-aks_westeurope/providers/Microsoft.ManagedIdentity/userAssignedIdentities/nevotek-aks-agentpool"
              }
            ],
            "kubernetes_version": "1.29",
            "linux_profile": [],
            "local_account_disabled": false,
            "location": "westeurope",
            "maintenance_window": [],
            "maintenance_window_auto_upgrade": [],
            "maintenance_window_node_os": [],
            "microsoft_defender": [],
            "monitor_metrics": [],
            "name": "nevotek-aks",
            "network_profile": [
              {
                "dns_service_ip": "10.0.0.10",
                "ip_versions": [
                  "IPv4"
                ],
                "load_balancer_profile": [
                  {
                    "effective_outbound_ips": [
                      "/subscriptions/b228ca4c-b0fb-4ad5-a680-0faa5fe6a789/resourceGroups/MC_infra002_nevotek-aks_westeurope/providers/Microsoft.Network/publicIPAddresses/fd3ad82c-1e54-45f1-bf53-c8f05dbd023d"
                    ],
                    "idle_timeout_in_minutes": 0,
                    "managed_outbound_ip_count": 1,
                    "managed_outbound_ipv6_count": 0,
                    "outbound_ip_address_ids": [],
                    "outbound_ip_prefix_ids": [],
                    "outbound_ports_allocated": 0
                  }
                ],
                "load_balancer_sku": "standard",
                "nat_gateway_profile": [],
                "network_data_plane": "azure",
                "network_mode": "",
                "network_plugin": "kubenet",
                "network_plugin_mode": "",
                "network_policy": "",
                "outbound_type": "loadBalancer",
                "pod_cidr": "10.244.0.0/16",
                "pod_cidrs": [
                  "10.244.0.0/16"
                ],
                "service_cidr": "10.0.0.0/16",
                "service_cidrs": [
                  "10.0.0.0/16"
                ]
              }
            ],
            "node_os_upgrade_channel": "NodeImage",
            "node_resource_group": "MC_infra002_nevotek-aks_westeurope",
            "node_resource_group_id": "/subscriptions/b228ca4c-b0fb-4ad5-a680-0faa5fe6a789/resourceGroups/MC_infra002_nevotek-aks_westeurope",
            "oidc_issuer_enabled": false,
            "oidc_issuer_url": "",
            "oms_agent": [],
            "open_service_mesh_enabled": null,
            "portal_fqdn": "nevotek-aks-dns-uyg4dnev.portal.hcp.westeurope.azmk8s.io",
            "private_cluster_enabled": false,
            "private_cluster_public_fqdn_enabled": false,
            "private_dns_zone_id": "",
            "private_fqdn": "",
            "resource_group_name": "infra002",
            "role_based_access_control_enabled": true,
            "run_command_enabled": true,
            "service_mesh_profile": [],
            "service_principal": [],
            "sku_tier": "Free",
            "storage_profile": [],
            "support_plan": "KubernetesOfficial",
            "tags": null,
            "timeouts": null,
            "web_app_routing": [],
            "windows_profile": [],
            "workload_autoscaler_profile": [],
            "workload_identity_enabled": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "kube_admin_config"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "kube_admin_config_raw"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "kube_config"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "kube_config_raw"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwLCJkZWxldGUiOjU0MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjo1NDAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIyIn0=",
          "dependencies": [
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "main",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/subscriptions/b228ca4c-b0fb-4ad5-a680-0faa5fe6a789/resourceGroups/infra002",
            "location": "westeurope",
            "managed_by": "",
            "name": "infra002",
            "tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwLCJkZWxldGUiOjU0MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjo1NDAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "helm_release",
      "name": "database",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/azure/helm/database/database-1.0.0.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "database",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.0.0",
                "chart": "database",
                "first_deployed": 1726173833,
                "last_deployed": 1726173833,
                "name": "database",
                "namespace": "production",
                "notes": "",
                "revision": 1,
                "values": "{\"image\":{\"tag\":\"1.0.0\"},\"replicaCount\":1}",
                "version": "1.0.0"
              }
            ],
            "name": "database",
            "namespace": "production",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "replicaCount: 1\n\nimage:\n  tag: \"1.0.0\"\n"
            ],
            "verify": false,
            "version": "1.0.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.76.1",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1726173839,
                "last_deployed": 1726173839,
                "name": "prometheus",
                "namespace": "monitoring",
                "notes": "kube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.monitoring.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace monitoring port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 1,
                "values": "{\"alertmanager\":{\"config\":{\"global\":{\"resolve_timeout\":\"5m\"},\"receivers\":[{\"name\":\"null\"}],\"route\":{\"group_by\":[\"alertname\",\"job\"],\"group_interval\":\"5m\",\"group_wait\":\"30s\",\"receiver\":\"null\",\"repeat_interval\":\"12h\"}}},\"grafana\":{\"adminPassword\":\"\\u003e+b:cBE78maat*-n\"},\"prometheus\":{\"prometheusSpec\":{\"serviceMonitorNamespaceSelector\":{},\"serviceMonitorSelector\":{},\"serviceMonitorSelectorNilUsesHelmValues\":false}},\"prometheusOperator\":{\"createCustomResource\":true}}",
                "version": "62.7.0"
              }
            ],
            "name": "prometheus",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "grafana:\n  adminPassword: \"\u003e+b:cBE78maat*-n\"\n\nprometheusOperator:\n  createCustomResource: true\n\nprometheus:\n  prometheusSpec:\n    serviceMonitorSelectorNilUsesHelmValues: false\n    serviceMonitorSelector: {}\n    serviceMonitorNamespaceSelector: {}\n\nalertmanager:\n  config:\n    global:\n      resolve_timeout: 5m\n    route:\n      group_by: ['alertname', 'job']\n      group_wait: 30s\n      group_interval: 5m\n      repeat_interval: 12h\n      receiver: 'null'\n    receivers:\n    - name: 'null'"
            ],
            "verify": false,
            "version": "62.7.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "values"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main",
            "module.kubernetes.random_password.grafana_admin_password"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "helm_release",
      "name": "web_app",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/azure/helm/web-app/web-app-0.1.0.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "web-app",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.0.0",
                "chart": "web-app",
                "first_deployed": 1726173833,
                "last_deployed": 1726173833,
                "name": "web-app",
                "namespace": "production",
                "notes": "",
                "revision": 1,
                "values": "{\"image\":{\"tag\":\"1.0.0\"},\"ingress\":{\"hosts\":[{\"host\":\"web-app.mycompany.com\",\"paths\":[\"/\"]}]},\"replicaCount\":1}",
                "version": "0.1.0"
              }
            ],
            "name": "web-app",
            "namespace": "production",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "replicaCount: 1\n\nimage:\n  tag: \"1.0.0\"\n\ningress:\n  hosts:\n    - host: web-app.mycompany.com\n      paths: [\"/\"]\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "helm_release",
      "name": "worker",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/azure/helm/worker/worker-0.1.0.tgz",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "worker",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.0.0",
                "chart": "worker",
                "first_deployed": 1726173833,
                "last_deployed": 1726173833,
                "name": "worker",
                "namespace": "production",
                "notes": "",
                "revision": 1,
                "values": "{\"image\":{\"tag\":\"1.0.0\"},\"replicaCount\":1}",
                "version": "0.1.0"
              }
            ],
            "name": "worker",
            "namespace": "production",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "replicaCount: 1\n\nimage:\n  tag: \"1.0.0\"\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "alertmanager_config",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "alertmanager.yml": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: alertmanager-config\n  namespace: monitoring\ndata:\n  alertmanager.yml: |\n    global:\n      resolve_timeout: 5m\n\n    route:\n      group_by: ['alertname', 'namespace', 'pod']\n      group_wait: 30s\n      group_interval: 5m\n      repeat_interval: 12h\n      receiver: 'email-notifications'\n\n    receivers:\n    - name: 'email-notifications'\n      email_configs:\n      - to: 'pwxcv7352@gmail.com'\n        from: 'alertmanager@brevo.com'\n        smarthost: 'smtp-relay.brevo.com:587'\n        auth_username: '749398003@smtp-brevo.com'\n        auth_identity: '749398003@smtp-brevo.com'\n        auth_password: 'YgVx28UQpfb0RNSL'\n\n\n  prometheus-rules.yml: |\n    groups:\n    - name: kubernetes-apps\n      rules:\n      - alert: PodHighCPUUsage\n        expr: sum(rate(container_cpu_usage_seconds_total{container!=\"\"}[5m])) by (namespace, pod) \u003e 0.8\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: High CPU usage detected in pod\n          description: Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has high CPU usage\n\n      - alert: PodHighMemoryUsage\n        expr: sum(container_memory_usage_bytes{container!=\"\"}) by (namespace, pod) / sum(container_spec_memory_limit_bytes{container!=\"\"}) by (namespace, pod) \u003e 0.8\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: High memory usage detected in pod\n          description: Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has high memory usage\n\n      - alert: PodCrashLooping\n        expr: rate(kube_pod_container_status_restarts_total[15m]) * 60 * 5 \u003e 5\n        for: 15m\n        labels:\n          severity: warning\n        annotations:\n          summary: Pod is crash looping\n          description: Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping\n\n      - alert: PodNotReady\n        expr: sum by (namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Unknown\"}) \u003e 0\n        for: 15m\n        labels:\n          severity: warning\n        annotations:\n          summary: Pod is not ready\n          description: Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been in a non-ready state for more than 15 minutes\n\n    - name: node\n      rules:\n      - alert: NodeHighCPUUsage\n        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100) \u003e 80\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: High CPU usage detected on node\n          description: Node {{ $labels.instance }} has high CPU usage\n\n      - alert: NodeHighMemoryUsage\n        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 \u003e 80\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: High memory usage detected on node\n          description: Node {{ $labels.instance }} has high memory usage\n\n      - alert: NodeDiskSpaceRunningOut\n        expr: (node_filesystem_avail_bytes{mountpoint=\"/\"} / node_filesystem_size_bytes{mountpoint=\"/\"}) * 100 \u003c 10\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: Node disk space is running out\n          description: Node {{ $labels.instance }} has less than 10% free disk space",
              "prometheus-rules.yml": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-additional-scrape-config\n  namespace: monitoring\ndata:\n  prometheus-additional.yaml: |\n    - job_name: 'kubernetes-pods'\n      kubernetes_sd_configs:\n      - role: pod\n      relabel_configs:\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n        action: keep\n        regex: true\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n        action: replace\n        target_label: __metrics_path__\n        regex: (.+)\n      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n        action: replace\n        regex: ([^:]+)(?::\\d+)?;(\\d+)\n        replacement: $1:$2\n        target_label: __address__\n      - action: labelmap\n        regex: __meta_kubernetes_pod_label_(.+)\n      - source_labels: [__meta_kubernetes_namespace]\n        action: replace\n        target_label: kubernetes_namespace\n      - source_labels: [__meta_kubernetes_pod_name]\n        action: replace\n        target_label: kubernetes_pod_name\n\n    - job_name: 'kubernetes-nodes'\n      scheme: https\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: node\n      relabel_configs:\n      - action: labelmap\n        regex: __meta_kubernetes_node_label_(.+)\n\n    - job_name: 'kubernetes-apiservers'\n      scheme: https\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: endpoints\n      relabel_configs:\n      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n        action: keep\n        regex: default;kubernetes;https"
            },
            "id": "monitoring/alertmanager-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "alertmanager-config",
                "namespace": "monitoring",
                "resource_version": "1353",
                "uid": "f4370589-c8e1-46f8-b3ca-7e569239bfe9"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "monitoring",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "monitoring",
                "resource_version": "1350",
                "uid": "362783f4-7647-4bb4-ad4e-3aeb61bbcefc"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "production",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "production",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "production",
                "resource_version": "1349",
                "uid": "b0485bcb-3b35-4b41-a76a-5423aa48ff84"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "staging",
      "provider": "module.kubernetes.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "staging",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "staging",
                "resource_version": "1354",
                "uid": "8e6e1e29-439a-48a0-ab6b-bdf768f55b8a"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.kubernetes.azurerm_kubernetes_cluster.aks",
            "module.kubernetes.azurerm_resource_group.main"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes",
      "mode": "managed",
      "type": "random_password",
      "name": "grafana_admin_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$MP3PfUtO4Z7Rry14JkAV5e9r/EyVqaWGr.KjJRnm4xiWmvoFrKBjK",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "\u003e+b:cBE78maat*-n",
            "special": true,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    }
  ],
  "check_results": null
}
