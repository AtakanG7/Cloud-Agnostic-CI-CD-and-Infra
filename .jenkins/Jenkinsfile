pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'atakan1927'
        HELM_REPO = 'https://github.com/AtakanG7/gh-pages.git'
        APP_NAME = 'web-app'
        CHART_PATH = "charts/${APP_NAME}"
    }

    stages {
        stage('Checkout Application') {
            steps {
                script {
                    load 'pipeline/stages/checkoutApplication.groovy'
                }
            }
        }
        stage('Clone Helm Chart Repository') {
            steps {
                script {
                    load 'pipeline/stages/cloneHelmChartRepository.groovy'
                }
            }
        }
        stage('Update Chart Versions') {
            steps {
                script {
                    load 'pipeline/stages/updateChartVersions.groovy'
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                script {
                    load 'pipeline/stages/buildAndPushDockerImage.groovy'
                }
            }
        }
        stage('Mirror Production in Staging') {
            steps {
                script {
                    load 'pipeline/stages/mirrorProductionInStaging.groovy'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                script {
                    load 'pipeline/stages/deployToStaging.groovy'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    load 'pipeline/stages/runTests.groovy'
                }
            }
        }
        stage('Approval') {
            steps {
                script {
                    load 'pipeline/stages/approval.groovy'
                }
            }
        }
        stage('Update Production Chart') {
            steps {
                script {
                    load 'pipeline/stages/updateProductionChart.groovy'
                }
            }
        }
        stage('Remove Staging Resources') {
            steps {
                script {
                    load 'pipeline/stages/removeStagingResources.groovy'
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    load 'pipeline/stages/deployToProduction.groovy'
                }
            }
        }
    }

    post {
        failure {
            echo "Pipeline failed. Please check the logs and take necessary actions."
        }
        success {
            echo "Pipeline completed successfully. New version ${env.NEW_VERSION} is deployed to production."
        }
        always {
            sh "rm -rf helm-repo"
        }
    }
}
